{"version":3,"sources":["services.js","components/PhonebookForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PhonebookForm","handleFormSubmit","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","value","onChange","type","Notification","message","messageType","className","Person","person","deletePerson","name","number","onClick","Persons","persons","map","key","Filter","searchWord","handleSearchChange","App","useState","setPersons","setNewName","setNewNumber","setsearchWord","setMessage","setMessageType","useEffect","personService","showMessage","msg","setTimeout","personsToShow","filter","RegExp","test","event","target","preventDefault","newPerson","some","element","window","confirm","p","apiPerson","catch","error","concat","parseInt","personToDelete","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bff8de59.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl).then(response => response.data);\r\n  return request;\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios\r\n    .post(baseUrl, newObject)\r\n    .then(response => response.data);\r\n  return request;\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios\r\n    .put(`${baseUrl}/${id}`, newObject)\r\n    .then(response => response.data);\r\n  return request;\r\n};\r\n\r\nconst deleteRecord = id => {\r\n  const request = axios\r\n    .delete(`${baseUrl}/${id}`)\r\n    .then(response => response.data);\r\n  return request;\r\n};\r\n\r\nexport default { getAll, create, update, deleteRecord };\r\n","import React from 'react'\r\n\r\nconst PhonebookForm = ({\r\n    handleFormSubmit, \r\n    handleNameChange, \r\n    handleNumberChange, \r\n    newName, \r\n    newNumber}) =>\r\n    <form onSubmit={handleFormSubmit}>\r\n      <div>\r\n        nimi: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>numero: <input value={newNumber} onChange={handleNumberChange} /></div>\r\n      <div>\r\n        <button type=\"submit\">lisää</button>\r\n      </div>\r\n    </form>\r\n\r\nexport default PhonebookForm","import React from \"react\";\r\n\r\nconst Notification = ({ message, messageType }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={`notification ${messageType}`}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services\";\nimport \"./index.css\";\n\n// components\nimport PhonebookForm from \"./components/PhonebookForm\";\nimport Notification from \"./components/Notification\";\n\nconst Person = ({ person, deletePerson }) => (\n  <li className=\"person\">\n    {person.name} {person.number}\n    <button value={person.id} onClick={deletePerson}>\n      poista\n    </button>\n  </li>\n);\n\nconst Persons = ({ persons, deletePerson }) => (\n  <ul>\n    {persons.map(person => (\n      <Person key={person.name} person={person} deletePerson={deletePerson} />\n    ))}\n  </ul>\n);\n\nconst Filter = ({ searchWord, handleSearchChange }) => (\n  <p>\n    rajaa näytettäviä:{\" \"}\n    <input value={searchWord} onChange={handleSearchChange} />\n  </p>\n);\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchWord, setsearchWord] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageType, setMessageType] = useState(\"\");\n\n  const hook = () => {\n    personService.getAll().then(persons => {\n      setPersons(persons);\n    });\n  };\n\n  useEffect(hook, []);\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setsearchWord(event.target.value);\n  };\n\n  const deletePerson = event => {\n    const id = parseInt(event.target.value);\n    const personToDelete = persons.find(p => p.id === id);\n\n    if (window.confirm(`Haluatko poistaa ${personToDelete.name}`))\n      personService.deleteRecord(id).then(data => {\n        showMessage(`poistettiin ${personToDelete.name}`, \"update\");\n        setPersons(persons.filter(person => person.id !== id));\n        return true;\n      });\n  };\n\n  const showMessage = (msg, type) => {\n    setMessageType(type);\n    setMessage(msg);\n    setTimeout(() => {\n      setMessage(null);\n    }, 5000);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    // Callback\n    // http://adripofjavascript.com/blog/drips/testing-array-contents-with-array-some.html\n    const isObjInArray = element => element.name === newName;\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n\n    if (persons.some(isObjInArray)) {\n      if (\n        window.confirm(\n          `${newName} on jo luettelossa, korvataanko vanha numero uudella?`\n        )\n      ) {\n        // Etsitään päivitettävän yhteystiedon id\n        const id = persons.filter(p => p.name === newName)[0].id;\n        personService\n          .update(id, newPerson)\n          .then(apiPerson => {\n            setPersons(\n              persons.map(person =>\n                person.id !== apiPerson.id ? person : apiPerson\n              )\n            );\n            showMessage(`Yhteystieto ${apiPerson.name} päivitetty`, \"update\");\n            return true;\n          })\n          .catch(error => {\n            showMessage(\n              `Henkilö '${newPerson.name}' on jo poistettu palvelimelta`,\n              \"error\"\n            );\n            setPersons(persons.filter(p => p.id !== id));\n          });\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else {\n      personService.create(newPerson).then(apiPerson => {\n        setPersons(persons.concat(apiPerson));\n        showMessage(`Lisättiin ${apiPerson.name}`, \"update\");\n        return true;\n      });\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  // Case insensitive filter\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\n  const filterCallback = person => RegExp(searchWord, \"i\").test(person.name);\n  const personsToShow = persons.filter(filterCallback);\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n\n      {message && <Notification message={message} messageType={messageType} />}\n\n      <Filter searchWord={searchWord} handleSearchChange={handleSearchChange} />\n\n      <h3>Lisää uusi</h3>\n\n      <PhonebookForm\n        handleFormSubmit={handleFormSubmit}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n      />\n\n      <h3>Numerot</h3>\n\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}